// Mocks generated by Mockito 5.4.4 from annotations
// in rank_assessment/test/features/credit_card_capture/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:rank_assessment/features/credit_card_capture/domain/entities/card.dart'
    as _i4;
import 'package:rank_assessment/features/credit_card_capture/domain/entities/country.dart'
    as _i6;
import 'package:rank_assessment/features/credit_card_capture/domain/repositories/card_repository.dart'
    as _i2;
import 'package:rank_assessment/features/credit_card_capture/domain/repositories/country_repository.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CardRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCardRepository extends _i1.Mock implements _i2.CardRepository {
  MockCardRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.CardEntity>> getSavedCards() => (super.noSuchMethod(
        Invocation.method(
          #getSavedCards,
          [],
        ),
        returnValue: _i3.Future<List<_i4.CardEntity>>.value(<_i4.CardEntity>[]),
      ) as _i3.Future<List<_i4.CardEntity>>);

  @override
  _i3.Future<void> saveCard(_i4.CardEntity? cardEntity) => (super.noSuchMethod(
        Invocation.method(
          #saveCard,
          [cardEntity],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [CountryRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCountryRepository extends _i1.Mock implements _i5.CountryRepository {
  MockCountryRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i6.CountryEntity>> getCountries() => (super.noSuchMethod(
        Invocation.method(
          #getCountries,
          [],
        ),
        returnValue:
            _i3.Future<List<_i6.CountryEntity>>.value(<_i6.CountryEntity>[]),
      ) as _i3.Future<List<_i6.CountryEntity>>);

  @override
  _i3.Future<void> saveCountry(_i6.CountryEntity? countryEntity) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveCountry,
          [countryEntity],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> updateCountry(_i6.CountryEntity? countryEntity) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCountry,
          [countryEntity],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
